resGridSize = 0.3;
domain = [1 1];

faceConstraints = {
    [0.1 0.1; 0.9 0.9]
};

G = pebiGrid2DGmshBase( ...
    resGridSize, ...
    domain, ...
    'convertToPEBI', false, ...
    'faceConstraints', faceConstraints ...
);
% Plot result
axis off; hold on;
plotGrid(G, 'faceColor', 'none');
for i = 1:length(faceConstraints)
    plot(faceConstraints{i}(:, 1), faceConstraints{i}(:, 2), LineStyle="--", Color="blue");
end
% Save plot
exportgraphics(gcf,'plots/face_constraint_as_transfinite_delaunay_1.png')

clf;

G = pebiGrid2DGmshBase( ...
    resGridSize, ...
    domain, ...
    'convertToPEBI', true, ...
    'faceConstraints', faceConstraints ...
);
% Plot result
axis off; hold on;
plotGrid(G, 'faceColor', 'none');
for i = 1:length(faceConstraints)
    plot(faceConstraints{i}(:, 1), faceConstraints{i}(:, 2), LineStyle="--", Color="blue");
end
% Save plot
exportgraphics(gcf,'plots/face_constraint_as_transfinite_PEBI_1.png')

clf;
G = pebiGrid2DGmshBase( ...
    resGridSize, ...
    domain, ...
    'convertToPEBI', false, ...
    'faceConstraintPerpendicularCells', int8(4), ...
    'faceConstraintPerpendicularFactor', 1, ...
    'faceConstraints', faceConstraints ...
);
% Plot result
axis off; hold on;
plotGrid(G, 'faceColor', 'none');
for i = 1:length(faceConstraints)
    plot(faceConstraints{i}(:, 1), faceConstraints{i}(:, 2), LineStyle="--", Color="blue");
end
% Save plot
exportgraphics(gcf,'plots/face_constraint_as_transfinite_delaunay_2.png')

clf;
G = pebiGrid2DGmshBase( ...
    resGridSize, ...
    domain, ...
    'convertToPEBI', true, ...
    'faceConstraintPerpendicularCells', int8(4), ...
    'faceConstraintPerpendicularFactor', 1, ...
    'faceConstraints', faceConstraints ...
);
% Plot result
axis off; hold on;
plotGrid(G, 'faceColor', 'none');
for i = 1:length(faceConstraints)
    plot(faceConstraints{i}(:, 1), faceConstraints{i}(:, 2), LineStyle="--", Color="blue");
end
% Save plot
exportgraphics(gcf,'plots/face_constraint_as_transfinite_pebi_2.png')
